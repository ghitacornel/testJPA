various JPA use cases

JDBC - Java DataBase Connectivity -> a Java API
JPA  - Java Persistence Api       -> a Java API
JTA  - Java Transaction API       -> a Java API

JPA wraps JDBC, is built on top of JDBC, uses JDBC
There are multiple JPA implementations, mostly used : Hibernate and EclipseLink

-> EntityManagerFactory, EntityManager, Transaction management VS DataSource, Connection, Transaction management
-> ORM framework VS table like data

PART 1

Entity
persistence.xml
EntityManagerFactory
EntityManager
Persistence Context

try / catch / finally and JDBC Connection management patterns and JDBC transaction management pattern
RESOURCE LOCAL vs JTA

simple mappings
2 types of mapping strategies : on fields VS on getters
2 types of mapping annotations : for Java Model VS for database model
date and time mapping strategies
enum mapping strategies, enum values database constraints
large binary objects mapping ( reminder -> cannot use them for all query clauses types )
transient usage
Java Primitive vs Java Wrappers strategy ( objects -> null / primitives -> not null checks but mandatory value required )

attribute converters

entity listener

PART 2

ID generation strategies : manually controlled, manually controlled using entity listeners, UUID, generated by database sequence, auto incremented by database, table based

Database locking : database transactions, ACID, database transaction isolation, pessimistic vs optimistic, @Version, LockingMode

Query caches : level 1 -> persistence context, level 2 -> external

mapped superclass

Java class inheritance mapping strategies : polymorphic queries, single table per class hierarchy strategy, joined tables strategy, single table per class strategy

Remember : Generic SQL query : DML = INSERT / UPDATE / DELETE / SELECT
Remember : Generic SQL Select : resolve JOINS -> reduce to single table / apply WHERE / resolve PROJECTIONS / resolve GROUP BY / apply HAVING / apply DISTINCT / apply ORDER BY
Remember : correlated queries vs non correlated queries

Query parameters
Query types : query, native query, named query, named native query, named native query with result set mapping, stored procedure query, criteria builder query, metadata model
Query examples : count / distinct / find by id / unique result / IN / LIKE / date and time functions / NULL checks / string functions / order / empty collection

bulk queries

PART 3

Remember : Entity Relationship diagram VS database tables diagram, foreign keys
Remember : database types of relationships : ONE TO MANY, MANY TO ONE, ONE TO ONE, MANY TO MANY

LAZY vs EAGER -> proxies
data model navigation on current transaction and persistence context
cascaded operations, orphans

embedded entities vs ONE TO ONE

relationship types : ONE TO MANY one way , MANY TO ONE one way , ONE TO MANY both ways, ONE TO ONE one way, ONE TO ONE bidirectional ( observe LAZY hint ), MANY TO MANY
underline usage of link tables for MANY TO MANY, but possible also for ONE TO MANY or ONE TO ONE
manual JOIN ON
manual FOREIGN KEY mappings